apiVersion: v1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: 2020-07-05T18:37:05Z
    generation: 2
    labels:
      app: nginx-app
      name: dcnginx
    name: nginx-dc
    namespace: myproject
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: nginx-app
      deploymentconfig: nginx-dc
      name: dcnginx
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: nginx-app
          deploymentconfig: nginx-dc
          name: dcnginx
      spec:
        containers:
        - image: wavecloud/nginx-oc
          imagePullPolicy: Always
          name: nginx-oc
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 8081
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nginx-oc
        from:
          kind: ImageStreamTag
          name: nginx-oc:latest
          namespace: myproject
        lastTriggeredImage: wavecloud/nginx-oc@sha256:fd7354b90dccbd27a73e2a9b82491dd0855518ba51d766a72d9d5176b36724a5
      type: ImageChange
  status: {}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2020-07-05T18:37:09Z
    creationTimestamp: 2020-07-05T18:37:05Z
    generation: 2
    labels:
      app: nginx-app
      name: dcnginx
    name: nginx-oc
    namespace: myproject
    resourceVersion: "32909"
    selfLink: /apis/image.openshift.io/v1/namespaces/myproject/imagestreams/nginx-oc
    uid: 868d9436-beee-11ea-9efb-025000000001
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: wavecloud/nginx-oc:latest
      from:
        kind: DockerImage
        name: wavecloud/nginx-oc:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: 2020-07-05T18:37:06Z
    labels:
      app: nginx-app
      name: dcnginx
    name: nginx-oc
    namespace: myproject
    resourceVersion: "32904"
    selfLink: /apis/route.openshift.io/v1/namespaces/myproject/routes/nginx-oc
    uid: 86d93bbb-beee-11ea-9efb-025000000001
  spec:
    host: nginx-oc-myproject.127.0.0.1.nip.io
    port:
      targetPort: 8081
    to:
      kind: Service
      name: nginx-oc
      weight: 100
    wildcardPolicy: None
  status:
    ingress: null
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: 2020-07-05T18:37:05Z
    labels:
      app: nginx-app
      name: dcnginx
    name: nginx-oc
    namespace: myproject
    resourceVersion: "32901"
    selfLink: /api/v1/namespaces/myproject/services/nginx-oc
    uid: 86962771-beee-11ea-9efb-025000000001
  spec:
    clusterIP: 172.30.76.238
    ports:
    - name: 80-tcp
      port: 80
      protocol: TCP
      targetPort: 80
    - name: 8081-tcp
      port: 8081
      protocol: TCP
      targetPort: 8081
    selector:
      app: nginx-app
      deploymentconfig: nginx-dc
      name: dcnginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
